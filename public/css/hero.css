/* Hero Section Styles - REFACTORED FOR CSS GRID */
#hero-section {
  /* Remove old flex fallback styles if they conflict */
  /* display: flex; */
  /* flex-direction: column; */
  /* justify-content: center; */
  /* align-items: center; */

  /* --- Core Grid Setup --- */
  display: grid;
  /* Example: 3 columns, auto rows - ADJUST AS NEEDED */
  grid-template-columns: repeat(3, 1fr);
  grid-template-rows: repeat(2, 1fr); /* Example: 2 rows */
  gap: 5px; /* Gap between blocks */

  min-height: 80vh; /* Base/Desktop height */
  padding: 5px; /* Use padding matching the gap or slightly more */
  position: relative; /* Keep for potential future absolute elements if needed */
  overflow: hidden; /* Prevent content overflow */

  /* Keep background fallback */
  background-color: #184551;
  background-image: url('/assets/images/1600xPLCHLDR.png'); /* This will be mostly covered by blocks */
  background-size: cover;
  background-position: center;
}

/* Styles for the grid items (blocks) */
.hero-block {
  background-size: cover;
  background-position: center;
  background-repeat: no-repeat;
  min-height: 150px; /* Minimum height for blocks */
  border: 1px solid rgba(0,0,0,0.1); /* Optional subtle border */
  box-sizing: border-box;
  overflow: hidden; /* Hide overflow within blocks */
}

/* Styles specific to the block holding the content */
.hero-block-content-container {
  /* --- Define Grid Area --- */
  /* Example: Make it span 2 columns and 2 rows, starting at row 1, col 1 */
  grid-column: 1 / span 2;
  grid-row: 1 / span 2;
  /* --- Flexbox for centering content *within* this grid item --- */
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 5%; /* Padding *inside* the content grid block */
  background-color: transparent; /* Make the grid item itself transparent */
  border: none; /* Remove border from the container block */
}

/* Styles for the actual content box INSIDE the container */
.hero-block-content {
  position: relative; /* Allow z-index if needed later */
  z-index: 10;
  max-width: 90%;
  width: fit-content; /* Adjust width to content */
  margin: auto;
  padding: clamp(1rem, 5vmin, 2rem); /* Responsive padding */
  border-radius: 4px;
  box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
  text-align: center;
  /* Background color and text color set by JS inline style */
}

/* Keyframe for fade-in (ensure it's defined) */
@keyframes fadeIn {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

/* Apply animation */
.fade-in {
  opacity: 0;
  animation: fadeIn 1s 0.5s ease-in forwards;
}

/* --- Text element styles inside the content block --- */
.hero-title { /* Target class or element */
  font-size: clamp(1.8rem, 5vmin, 3rem);
  margin-bottom: 0.5rem;
  font-weight: 400;
  letter-spacing: 1px;
  line-height: 1.2;
  /* Color set inline by JS */
}

.hero-subtitle { /* Target class or element */
  font-size: clamp(1.2rem, 3.5vmin, 1.8rem);
  margin-bottom: 1rem;
  font-weight: 300;
  /* Color set inline by JS */
}

.hero-tagline { /* Target class or element */
  font-size: clamp(1rem, 3vmin, 1.2rem);
  margin-bottom: 1.5rem;
  font-weight: 300;
  color: #a0c0c0; /* Can set a default/override here or let JS handle */
  line-height: 1.6;
}

/* Styles for the Call to Action button */
.hero-cta {
  display: inline-block;
  padding: 0.8rem 1.5rem;
  background-color: #225f6e;
  color: #ebefdf; /* Use text color from config? */
  text-decoration: none;
  border: 1px solid #829d9e;
  font-size: 1rem;
  transition: all 0.3s ease;
  border-radius: 3px;
  cursor: pointer;
}

.hero-cta:hover,
.hero-cta:focus {
  background-color: #ebefdf;
  color: #225f6e;
  outline: none;
}


/* === RESPONSIVE STYLES === */
@media (max-width: 768px) {

  /* Default Mobile Styles (Portrait & Landscape unless overridden below) */
  #hero-section {
    min-height: 70vh; /* Adjusted mobile height */
    padding: 5px;
    /* Example: Change to 2 columns for mobile */
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: repeat(3, 1fr); /* 3 rows to fit 6 items */
  }

  .hero-block-content-container {
     /* Example: Make content container span full width on mobile */
     grid-column: 1 / span 2;
     grid-row: 1 / span 1; /* Place it in the first row */
     align-items: center; /* Adjust alignment */
     padding: 5%;
  }

   .hero-block-content {
      padding: clamp(0.8rem, 4vmin, 1.5rem);
   }

  /* Adjust mobile text sizes */
  .hero-title {
    font-size: clamp(1.6rem, 6vmin, 2.2rem);
  }
  .hero-subtitle {
    font-size: clamp(1.1rem, 4vmin, 1.4rem);
  }
  .hero-tagline {
    font-size: clamp(0.9rem, 3vmin, 1.1rem);
  }


  /* ---> Landscape Overrides (NESTED INSIDE max-width: 768px) <--- */
  @media (orientation: landscape) {
    #hero-section {
      min-height: 75vh; /* Landscape often needs more height */
      /* Example: Change back to 3 columns for landscape */
      grid-template-columns: repeat(3, 1fr);
      grid-template-rows: repeat(2, 1fr); /* Back to 2 rows */
    }

    .hero-block-content-container {
       /* Example: Span 2 cols, 1 row in landscape */
       grid-column: 1 / span 2;
       grid-row: 1 / span 1;
    }

    /* Adjust landscape text sizes slightly if needed */
     .hero-title {
       font-size: clamp(1.5rem, 5vw, 2rem);
    }
     .hero-subtitle{
         font-size: clamp(1rem, 3.5vw, 1.3rem);
     }
     .hero-tagline {
         font-size: clamp(0.8rem, 2.8vw, 1rem);
     }
     .hero-block-content {
        padding: clamp(0.8rem, 3vmin, 1.5rem);
     }
  } /* End of landscape override */

} /* End of max-width: 768px */

/* Optional: Styles for specific blocks if needed */
/* .hero-block:nth-child(1) { ... } */
/* .hero-block:nth-child(2) { ... } */

/* Hide hero sections that might remain from old code */
.hero-introduction, .featured-clients {
    display: none;
}